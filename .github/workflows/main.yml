name: Pull Request
on:
  push:
    branches: [ master ]
  pull_request:
jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup env
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Cache env
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --without test
      - name: Check with ruff
        run: poetry run ruff --output-format=github --config ./pyproject.toml .
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - name: Setup env
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
      - uses: actions/cache@v3
        name: Cache env
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install --without dev
      - name: Run tests
        run: poetry run pytest -v tests/
      - name: Test coverage
        continue-on-error: true
        run: poetry run pytest --cov=src --cov-fail-under=60 tests/
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: false
