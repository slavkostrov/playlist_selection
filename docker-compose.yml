version: "3.8"

services:

  init_db:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command:
      - bash
      - "-c"
      - >
        poetry run python -m alembic upgrade head &&
        poetry run python db/init_db.py
    env_file:
      - .env_db
    volumes:
      - .aws/:/root/.aws:ro

  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      init_db:
        condition: service_completed_successfully
      redis:
        condition: service_started
      worker:
        condition: service_started
    environment:
      - REDIS_HOST=redis
      - PLAYLIST_SELECTION_CLIENT_ID=${PLAYLIST_SELECTION_CLIENT_ID}
      - PLAYLIST_SELECTION_CLIENT_SECRET=${PLAYLIST_SELECTION_CLIENT_SECRET}
      - PLAYLIST_SELECTION_CALLBACK_URL=${PLAYLIST_SELECTION_CALLBACK_URL}
      - PLAYLIST_SELECTION_S3_BUCKET_NAME=${PLAYLIST_SELECTION_S3_BUCKET_NAME}
      - PLAYLIST_SELECTION_S3_PROFILE_NAME=${PLAYLIST_SELECTION_S3_PROFILE_NAME}
      - PLAYLIST_SELECTION_MODEL_CLASS=${PLAYLIST_SELECTION_MODEL_CLASS}
      - PLAYLIST_SELECTION_MODEL_NAME=${PLAYLIST_SELECTION_MODEL_NAME}
    env_file:
      - .env
      - .env_db
    restart: always
    volumes:
      - .aws/:/root/.aws:ro
    command: poetry run uvicorn app.main:app --host 0.0.0.0 --port 5000 --log-config logging_config.yml

  worker:
    build:
      context: .
      dockerfile: docker/Dockerfile
    restart: always
    env_file:
      - .env_db
    depends_on:
      - redis
    command: poetry run celery -A app.worker worker --loglevel=INFO

  flower:
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "5555:5555"
    restart: always
    env_file:
      - .env_db
    depends_on:
      - worker
    command: poetry run celery -A app.worker flower --host=0.0.0.0 --port=5555 --loglevel=INFO

  bot:
    build: ./bot
    restart: always
    environment:
      - SERVICE_URI=http://app:5000
      - BOT_TOKEN=${BOT_TOKEN}
    depends_on:
      - app

  redis:
    image: "redis:latest"
    restart: always
    ports:
      - "6379:6379"
